# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from bs4 import BeautifulSoup

com_nums = [] # 사업자 등록번호 list

class TestTest1():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test1(self):
    self.driver.get("https://dart.fss.or.kr/dsab007/main.do")
    self.driver.set_window_size(2560, 1400)
    soup = BeautifulSoup(self.driver.page_source, 'html.parser')
    numOfpage = soup.css.select("#psWrap > div.pageSkip > ul > li > a") # dart 페이지 갯수
    dropdown = self.driver.find_element(By.ID, "option")
    dropdown.find_element(By.XPATH, "//option[. = '회사명']").click()
    self.driver.find_element(By.ID, "btnPlus").click()
    self.driver.find_element(By.ID, "businessNm").click()
    self.driver.find_element(By.CSS_SELECTOR, "#root4646 > .jstree-icon").click() # 업종 선택 부분
    self.driver.find_element(By.CSS_SELECTOR, "#\\34 6 > .jstree-icon").click() # 업종 선택 부분
    self.driver.find_element(By.ID, "467_anchor").click() # 업종 선택 부분
    dropdown = self.driver.find_element(By.ID, "corporationType")
    dropdown.find_element(By.XPATH, "//option[. = '유가증권시장']").click()
    dropdown = self.driver.find_element(By.ID, "maxResultsCb")
    dropdown.find_element(By.XPATH, "//option[. = '100']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btnArea > .btnSearch").click()
    self.vars["i"] = self.driver.execute_script("return 1")
    self.vars["j"] = self.driver.execute_script("return 2")
    self.vars["com_name"] = self.driver.execute_script("css=tr:nth-child(arguments[0]) .innerWrap > a", self.vars["i"])
    self.vars["next_page"] = self.driver.execute_script("linkText=arguments[0]", self.vars["j"])
    
    for i in range(0, len(numOfpage)+1): # 페이지 수 만큼 반복
      for i in range(0, 100):
        if self.driver.execute_script("return (arguments[0]>0)", self.vars["com_name"]):
          self.driver.find_element(By.CSS_SELECTOR, f"tr:nth-child({self.vars['i']}) .innerWrap > a").click()
          corp = soup.select_one('#winCorpInfo > div.layerPop.layerPopM > div.cont > table > tbody > tr:nth-child(8) > td')
          com_num = corp.get_text()
          if com_num in com_nums:
            continue
          else:
            com_nums.append(com_num)
          self.driver.find_element(By.LINK_TEXT, "닫기").click()
          self.vars["i"] = self.driver.execute_script("return arguments[0] + 1", self.vars["i"])
      if self.driver.execute_script("return (arguments[0]>0)", self.vars["next_page"]):
        self.driver.find_element(By.LINK_TEXT, f"{self.vars['j']}").click()
        self.vars["j"] = self.driver.execute_script("return arguments[0] + 1", self.vars["j"])
    